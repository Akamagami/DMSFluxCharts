---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: harbor
  namespace: harbor # Or your desired namespace for Harbor
spec:
  interval: 5m # How often to reconcile the Helm release
  chart:
    spec:
      chart: harbor
      version: "1.13.0" # Use a specific version, check official Harbor chart releases
      sourceRef:
        kind: HelmRepository
        name: harbor
        namespace: flux-system # Must match the namespace of your HelmRepository resource
  values:
    # 1. Exposing Harbor via Ingress
    expose:
      type: ingress # Use Ingress, as you've manually installed an Ingress Controller
      tls:
        enabled: true # Recommended, even for local. Use self-signed certs.
        certSource: secret
        secret:
          secretName: harbor-tls-secret # You'll create this secret in the 'harbor' namespace
          notarySecretName: harbor-tls-secret
      ingress:
        core:
          host: harbor.kind-shoot.local # <-- Your desired local hostname for core Harbor
          annotations:
            kubernetes.io/ingress.class: nginx # Crucial: Must match your Ingress Controller
            # Common Nginx annotations for registry:
            nginx.ingress.kubernetes.io/proxy-body-size: "0" # Allow large image pushes
            nginx.ingress.kubernetes.io/client-max-body-size: "0" # Also for large pushes
            # nginx.ingress.kubernetes.io/backend-protocol: HTTPS # If your backend is HTTPS
        registry:
          enabled: true
          host: registry.kind-shoot.local # <-- Separate host for Docker client push/pull
          annotations:
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/proxy-body-size: "0"
            nginx.ingress.kubernetes.io/client-max-body-size: "0"
        notary:
          enabled: false # Disable if you don't use Notary (most common for simpler setups)

    externalURL: https://harbor.kind-shoot.local # <-- Must match your core ingress host and protocol

    # 2. Persistence (Using local-path-provisioner in Kind Shoot)
    persistence:
      enabled: true
      resourcePolicy: keep
      imageChartStorage:
        type: pvc
        size: 50Gi # Adjust size
        storageClass: standard # <-- IMPORTANT: This should be the SC created by local-path-provisioner
                               # If you installed local-path-provisioner via Helm, its default SC is `standard`.
      database:
        type: internal # For simplicity in local dev. External is still better for "real" dev.
        pvc:
          size: 10Gi
          storageClass: standard
      redis:
        type: internal
        pvc:
          size: 5Gi
          storageClass: standard
      jobservice:
        type: pvc
        size: 5Gi
        storageClass: standard

    # 3. Security - Admin Password (For local testing, avoid committing to Git)
    harborAdminPassword: your-secure-admin-password # <-- For local testing, put a placeholder
    # For a more robust local setup, you could still use Sealed Secrets even with Kind.

    # 4. Other configuration (adjust for local resources)
    # Reduce replicas to save resources on your local machine
    # core:
    #   replicas: 1
    # registry:
    #   replicas: 1
    # portal:
    #   replicas: 1
    # jobservice:
    #   replicas: 1

    # Disable vulnerability scanners if you want to save resources or don't need them for a quick test
    trivy:
      enabled: false
    clair:
      enabled: false # Clair is deprecated, Trivy is the successor
    # chartmuseum:
    #   enabled: false # Disable if you only use it for Docker images
